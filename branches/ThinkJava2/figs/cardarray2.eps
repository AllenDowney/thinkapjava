%!PS-Adobe-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5d
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: plain 288 136 0 () ()
%%BoundingBox: 0 0 288 136
%%Pages: 1
%%EndComments
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CNRSWG+Helvetica
%!FontType1-1.0: CNRSWG+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CNRSWG+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 535 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F88FA952F0E644CD7B3B8324AA5B96096D4A277F61777F2BA68A767
FF8371A04B6FDE24831FAC83C54671B95258CEA66C2202669FB25202A0518758
C5E07FAD6C607247AA63933D77CD81557FD4B00BE44214F97F9428FD200ED7A8
E89172A9EBCB8013D4D7AEC52908D77EB7907AC00D8442B974EA5EB5891F9236
D784138C1D78634910FBD939868E200685B03B217DC20EB5E6BE379BE44F6A47
2F71FF74A66BAF91B1673D709936B3AE98B39229C6308AF20E98C99210DFB3D5
DF2322FBBC9796F8206742F0E1C9332F5A6A8F28913C7D50050F578BA95B43B3
62943C7EA6BCB65288086A60CA53F05F9CC96887CF97D21E401493598255FC2D
D416C958D08C27F63B86FC670E5CD5D67F06537EB3E0FA3EC634897E4732AAC5
F9C4DCAEB75B8516B8016A37F75E6D26B4018683B71A91E03C4C1232BB671C94
4F77F93DD642191FF04BF843E7DE0BF62C6E951FCF9226B63F39D2F4C6C36336
6D0A07F1BB85EA46DB26411AFC0105C69D476D38E1CB3A00A1D63B4205950D1D
B40862B99C0949964439FF6DD052BBDECCC4AF06D78D61A86A5852C838F5DC9C
6BEF132DE0B5E587BC44ACE9B424015944E28912CA9ADCC6FB4C2C5E920561D7
FC2C92545BCBFD8F967C9D6EFE7ECA78342D8F5D22BD7B0730E1C4B258E05C38
6919D857D58003EA1660F5F86B714BF969BCA3FBF01D2034EAB7D285E754313C
061E4962ED8C1C0E9B5C3F87733E02CBF5ACB6BFD8D3114165C74666C07640D3
90A6AB914D1F75843D65075D2EAB22D571A5A142A0454B4B9F4B72B8EE3FC31C
D5B01EBAE5B05A5511FAD8A7630D0D6D31466D5715A2CCD84E2A661A3D7BF032
78B3A0D7036BDBC42C3FEDDEAA521F3F955CEB8FDC7F44F2270B676931A3B593
32950A8F3D6754C834498B81CA77798DA17DBF55C2D09CF9D6FCF8222DF712FA
3F6A5BF3F7A3DCE6FC944F730742A42937DDAC6922573F762F5B2BF34AA04244
27512E4F1EBC5757454B25B0397B927A7FE4949570606C61013986D2443C399A
E951BEC99509A4E2137A60C776B0457DC3538E04E6C26FDD9FABF0DCA806F58F
E98971F688D9A15C62A64CA3AD987D9BDF9656A5A0040339DE336ADAC395E0FC
5F7F465EEE51AB5CAE44B0D094752FAFA34780C2E6D5E839FD6E74A4DAC17E4F
1E292502456EB4AC2954133549E2B7D4904A631407F6361A27E23573E7092C0F
D112BB0719B9F54C1E227CDFE608DEF9F922397A011D4149BCA7F3AF9175C3F4
8F91BF523E36CC0FD6A5B848A8DD9C8E766765C445F6271164DB09C0A4599F20
FAA0550772E4D02FD2C83BED75A72FD49A7A2EC2F56FEBF3E34A943686624E06
7444957BDE48BF5BD27A984BA5003418EDC70F50A9C3D4CCBD8D3032E906E9FB
BDE8A299FD4C22D2312A60EDF1CD0A92E64D2E58AE66DF01D5D25386AF07673B
10F246E5FB36A8CF41B5CC00AE5C392142879882F7DD08EF46D18FD3B9DF05B7
E16251CD8874B8ACBFF51DC03903F67D6F3DBF3681E29880FBA194287990B0C6
7AAE7C1DEA5295DB6F91ECAB8D4E5AC06EE2537993BC968A7687BC004C12BF23
031F50E03D1F050BA8AE79B998270CFF2586D464022A5A392453CE1E06680947
4A0EB6938E51D2F945F0E7C23027BF0C8B064999C1964C219F2A572458BBD62A
30929EEE2D67EAABE67390128BFB16A3F2DB1BDD2AB835F0EF49DBC145A79A07
10580B4416D046781B6EA85C1316A460485A60ADBDCBD1B900F46B7AC5D80382
95121B582733B38916677B938B8CAF8A0DEB5F2DEE6AFA0B9965CA2CD55A4A71
859D4BBC06390708186C16B3E056710DA8104AFF85E87731CBA0117B8D601ED5
6DB51DCFBD8EF57CCD538E01430BEBDCC783EF296DC12D53A8C71213ABF43DF0
9008CFA9C6D152F930C8241D2746FF2CE9BAD05B326B768107603A7CF71287BC
447C4FF29DC8D2F202A99C757549518B1977D347F9C8748D3CE8E8906DBC9002
C14C8C2AE303F7A71CC033F3ACED383DE3435010D6EE89ACA75F5AAFA02047EF
B9296EB2763A92541C02468F604582EC7C982AEE4AB03D825C3498095D0B030E
DFC930136D4F4D45200398DE32CB96044F79CEF6BC7D2D08709B7187BDB3BBFC
5D9E095E0654E9D385F6A365C0B8D2D1765B8653E493EB6BF05794CA03856D02
EDD4F8EBCF22074F9E661877954E4AB5157B1C3FB11CC8AFA3148F7A4DD4C7DD
6E0411499A519050BFA0C0E39F01B7689911F5425FEB1887391ABB6EC456B9B8
36EC8BAF40DBBED64063C4D785B12149D63682BE3B1E587120F0FF5499E0739D
41679789B01745B6A2A1DEFB011C27966AB21C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CNRSWG+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
288 136 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
pdfStartPage
0 0 288 136 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
935 7 630 810 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
935 7 630 810 re
S
170 7 630 810 re
f*
170 7 630 810 re
S
1250 142 225 180 re
S
1250 502 225 180 re
S
485 142 225 180 re
S
485 502 225 180 re
S
710 1222 m
710 1042 l
1565 1042 l
1610 1087 l
1700 997 l
1745 1042 l
2870 1042 l
2870 1222 l
1745 1222 l
1700 1177 l
1610 1267 l
1565 1222 l
710 1222 l
h
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 136.995 18.7] Tm
0 0 Td
/F8_0 10.8 Tf
(2) 6.0048 Tj
0 36 Td
(0) 6.0048 Tj
-33.2992 36 Td
(suit) 16.8048 Tj
-37.50037 0 Td
(rank) 21.006 Tj
-76.50037 0 Td
(1) 6.0048 Tj
-76.50037 36 Td
(0) 6.0048 Tj
-109.79957 36 Td
(suit) 16.8048 Tj
-114.00074 0 Td
(rank) 21.006 Tj
-47.99564 108 Td
/F8_0 9.9 Tf
(1) 5.5044 Tj
-807.636 TJm
(2) 5.5044 Tj
-807.637 TJm
(3) 5.5044 Tj
-15353.1 TJm
(51) 11.0088 Tj
-61.49564 108 Td
(0) 5.5044 Tj
-132.90034 90 Td
/F8_0 10.8 Tf
(cards) 26.406 Tj
Q
q
0 1360 m
0 0 l
2880 0 l
2880 1360 l
0 1360 l
h
627.801 1114 m
719 1114 l
719 1150 l
627.801 1150 l
627.801 1150 l
699.801 1132 l
627.801 1114 l
h
W*
395 1132 m
710 1132 l
S
Q
627.801 1114 m
699.801 1132 l
627.801 1150 l
S
q
0 1360 m
0 0 l
2880 0 l
2880 1360 l
0 1360 l
h
680.602 899.801 m
644.602 816.398 l
677.602 802 l
713.602 885.398 l
713.602 885.398 l
669.199 826 l
680.602 899.801 l
h
W*
800 1132 m
665 817 l
S
Q
680.602 899.801 m
669.199 826 l
713.602 885.398 l
S
q
0 1360 m
0 0 l
2880 0 l
2880 1360 l
0 1360 l
h
1020.8 885.398 m
1056.8 802 l
1089.8 816.398 l
1053.8 899.801 l
1053.8 899.801 l
1065.8 826 l
1020.8 885.398 l
h
W*
935 1132 m
1070 817 l
S
Q
1020.8 885.398 m
1065.8 826 l
1053.8 899.801 l
S
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
350 1087 90 90 re
f*
350 1087 90 90 re
S
755 1087 90 90 re
f*
755 1087 90 90 re
S
890 1087 90 90 re
f*
890 1087 90 90 re
S
1025 1087 90 90 re
f*
1025 1087 90 90 re
S
1160 1087 90 90 re
f*
1160 1087 90 90 re
S
1295 1087 90 90 re
f*
1295 1087 90 90 re
S
1430 1087 90 90 re
f*
1430 1087 90 90 re
S
1925 1087 90 90 re
f*
1925 1087 90 90 re
S
2060 1087 90 90 re
f*
2060 1087 90 90 re
S
2195 1087 90 90 re
f*
2195 1087 90 90 re
S
2330 1087 90 90 re
f*
2330 1087 90 90 re
S
2465 1087 90 90 re
f*
2465 1087 90 90 re
S
2600 1087 90 90 re
f*
2600 1087 90 90 re
S
2735 1087 90 90 re
f*
2735 1087 90 90 re
S
1790 1087 90 90 re
f*
1790 1087 90 90 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CNRSWG+Helvetica
%%EOF
